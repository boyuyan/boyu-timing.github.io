#include <Wire.h>
#include <VL53L1X.h>
#include <Servo.h>

VL53L1X sensor;

const int servoPin = 2;

int dist = 0;
int dist_div = 0;
int dist_state = 0;
int dist_state_old = 0;
int LED = 3;

Servo servo; 


void setup() {
  while (!Serial) {}
  Serial.begin(115200);
  Wire.begin();
  Wire.setClock(400000); // use 400 kHz I2C

  sensor.setTimeout(500);
  if (!sensor.init())
  {
    Serial.println("Failed to detect and initialize sensor!");
    while (1);
  }

  // Use long distance mode and allow up to 50000 us (50 ms) for a measurement.
  // You can change these settings to adjust the performance of the sensor, but
  // the minimum timing budget is 20 ms for short distance mode and 33 ms for
  // medium and long distance modes. See the VL53L1X datasheet for more
  // information on range and timing limits.
  sensor.setDistanceMode(VL53L1X::Long);
  sensor.setMeasurementTimingBudget(50000);

  // Start continuous readings at a rate of one measurement every 50 ms (the
  // inter-measurement period). This period should be at least as long as the
  // timing budget.
  sensor.startContinuous(50);
  servo.attach(servoPin);
  pinMode(LED, OUTPUT);
}

void loop() {
  // put your main code here, to run repeatedly:
  dist = sensor.read();
  delay(100);
  dist_div = dist - sensor.read();
  
 
  if (dist < 300) {
    servo.write(180);
    analogWrite(LED, 0);
  }
  else if (dist > 1000){
    servo.write(0);
    analogWrite(LED, 0);
    dist_state = 0;
  }
  else {
    if (abs(dist_div) < 50 && dist_state == 0){
      servo.write(0);
      analogWrite(LED, 100);
      delay(map(dist, 300, 1000, 2000, 100));
      analogWrite(LED,0);
      delay(map(dist, 300, 1000, 2000, 100));
    }
    else{
      servo.write(135);
      dist_state = 1;
      analogWrite(LED, 100);
      delay(map(dist, 300, 1000, 1000, 100));
      analogWrite(LED,0);
      delay(map(dist, 300, 1000, 1000, 100));
    } 
  }
  if (dist_state == 1 && dist_div < 0 ) {
      analogWrite(LED, 100);
      delay(map(dist, 300, 1000, 1000, 100));
      analogWrite(LED,0);
      delay(map(dist, 300, 1000, 1000, 100));
  }
  else {
      servo.write(map(dist, 300, 1000, 180, 0));
      analogWrite(LED, 100);
      delay(map(dist, 300, 1000, 1000, 100));
      analogWrite(LED,0);
      delay(map(dist, 300, 1000, 1000, 100));
  }
}
